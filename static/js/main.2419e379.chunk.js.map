{"version":3,"sources":["components/Header.jsx","components/Note.jsx","components/Footer.jsx","components/createArea.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Note","props","className","title","content","Footer","CreateArea","useState","note","setnotes","handleChange","event","target","name","value","prevNote","type","onChange","placeholder","rows","onClick","onAdd","preventDefault","App","notes","newNote","prevNotes","map","noteItem","index","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAOeA,MAPf,WACE,OACE,iCACE,2CCMSC,MARf,SAAcC,GACV,OACE,sBAAKC,UAAU,OAAf,UACG,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,cCGJC,MAPf,WACI,OACI,iCACI,qD,cC8BGC,MAjCf,SAAoBL,GAChB,MAAuBM,mBAAS,CAC5BJ,MAAM,GACNC,QAAQ,KAFZ,mBAAOI,EAAP,KAAYC,EAAZ,KAIA,SAASC,EAAaC,GAClB,MAAmBA,EAAMC,OAAlBC,EAAP,EAAOA,KAAKC,EAAZ,EAAYA,MACZL,GAAS,SAACM,GACN,OAAO,YAAC,eACDA,GADP,kBAEKF,EAAOC,OAapB,OACI,8BACI,uBAAMZ,UAAU,cAAhB,UACI,uBAAOA,UAAU,QAAQc,KAAK,OAAOH,KAAK,QAAQI,SAAUP,EAAcI,MAAON,EAAKL,MAAOe,YAAY,UACzG,0BAAUL,KAAK,UAAUM,KAAK,IAAIF,SAAUP,EAAcI,MAAON,EAAKJ,QAASc,YAAY,kBAC3F,wBAAQE,QAdpB,SAAoBT,GAChBV,EAAMoB,MAAMb,GACZC,EAAS,CACLN,MAAM,GACNC,QAAQ,KAEZO,EAAMW,kBAQE,uB,MCDDC,MAtBf,WACE,MAAwBhB,mBAAS,IAAjC,mBAAOiB,EAAP,KAAaf,EAAb,KAMA,OACE,gCACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAYY,MARjB,SAAiBI,GACfhB,GAAS,SAACiB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBD,UAQnBD,EAAMG,KAAI,SAACC,EAASC,GACnB,OACC,cAAC,EAAD,CAAcC,GAAID,EAAO1B,MAAOyB,EAASzB,MAAOC,QAASwB,EAASxB,SAAvD,MAId,cAAC,EAAD,QCZQ2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2419e379.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <header>\r\n      <h1>Keeper</h1>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from \"react\";\r\nfunction Note(props){\r\n    return(\r\n      <div className=\"note\">\r\n         <h1>{props.title}</h1>\r\n         <p>{props.content}</p>\r\n      </div>\r\n    )\r\n}\r\nexport default Note;","import React from \"react\";\r\nfunction Footer(){\r\n    return (\r\n        <footer>\r\n            <p> Copyright @ 2021</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React, { useState } from \"react\";\r\nfunction CreateArea(props){\r\n    const [note,setnotes]= useState({\r\n        title:\"\",\r\n        content:\"\"\r\n    });\r\n    function handleChange(event){\r\n        const {name,value}=event.target;\r\n        setnotes((prevNote)=>{\r\n            return ({\r\n                ...prevNote,\r\n                [name]: value\r\n            });\r\n        });\r\n    }\r\n    function submitNote(event){\r\n        props.onAdd(note);\r\n        setnotes({\r\n            title:\"\",\r\n            content:\"\"\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\" > \r\n                <input className=\"input\" type=\"text\" name=\"title\" onChange={handleChange} value={note.title} placeholder=\"Title\"/>\r\n                <textarea name=\"content\" rows=\"3\" onChange={handleChange} value={note.content} placeholder=\"Take a note..\" ></textarea>\r\n                <button onClick={submitNote}>ADD</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateArea;","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Note from \"./components/Note\";\r\nimport Footer from \"./components/Footer\";\r\nimport CreateArea from \"./components/createArea\";\r\nimport '../src/styles.css';\r\nfunction App(){\r\n  const [notes,setnotes] =useState([]);\r\n  function addNote(newNote){\r\n    setnotes((prevNotes)=>{\r\n      return [...prevNotes,newNote]\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n       <Header></Header>\r\n       <CreateArea onAdd={addNote} />\r\n\r\n       {notes.map((noteItem,index)=>{\r\n         return(\r\n          <Note key={1} id={index} title={noteItem.title} content={noteItem.content}  />\r\n         )\r\n       })}\r\n       \r\n       <Footer />\r\n    </div> \r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}